#!/bin/bash

# Script para otimizar v√≠deos para Orange Pi Zero 2W
# Converte para formato eficiente para dispositivos ARM

set -e

echo "======================================"
echo "PDVIEW - Otimizador de V√≠deo"
echo "Para Orange Pi Zero 2W (ARM64)"
echo "======================================"
echo ""

# Verificar se ffmpeg est√° instalado
if ! command -v ffmpeg &> /dev/null; then
    echo "‚ùå Erro: ffmpeg n√£o est√° instalado!"
    echo ""
    echo "Instale com:"
    echo "  macOS:  brew install ffmpeg"
    echo "  Linux:  sudo apt install ffmpeg"
    echo "  Orange Pi: sudo apt install ffmpeg"
    exit 1
fi

# Verificar par√¢metros
if [ "$#" -lt 1 ]; then
    echo "Uso: $0 <video-entrada> [video-saida]"
    echo ""
    echo "Exemplo:"
    echo "  $0 propaganda.mp4"
    echo "  $0 propaganda.mp4 base.mp4"
    echo ""
    echo "Se o nome de sa√≠da n√£o for especificado,"
    echo "ser√° salvo como 'videos/base.mp4'"
    exit 1
fi

INPUT_VIDEO="$1"
OUTPUT_VIDEO="${2:-videos/base.mp4}"

# Verificar se arquivo de entrada existe
if [ ! -f "$INPUT_VIDEO" ]; then
    echo "‚ùå Erro: Arquivo '$INPUT_VIDEO' n√£o encontrado!"
    exit 1
fi

# Criar diret√≥rio videos se n√£o existir
mkdir -p videos

echo "üìπ V√≠deo de entrada: $INPUT_VIDEO"
echo "üéØ V√≠deo de sa√≠da: $OUTPUT_VIDEO"
echo ""

# Obter informa√ß√µes do v√≠deo original
echo "Analisando v√≠deo original..."
ffmpeg -i "$INPUT_VIDEO" 2>&1 | grep -E "Stream|Duration" || true
echo ""

echo "======================================"
echo "Selecione o perfil de otimiza√ß√£o:"
echo "======================================"
echo ""
echo "1) Ultra Leve (192x384, 24fps, 300kbps)"
echo "   ‚úÖ M√°xima economia de recursos"
echo "   ‚úÖ Ideal para Orange Pi Zero 2W"
echo "   ‚ö†Ô∏è  Qualidade visual b√°sica"
echo ""
echo "2) Leve (192x384, 24fps, 500kbps) [RECOMENDADO]"
echo "   ‚úÖ Bom equil√≠brio qualidade/performance"
echo "   ‚úÖ Funciona bem no Orange Pi"
echo "   ‚úÖ Qualidade visual aceit√°vel"
echo ""
echo "3) Normal (192x384, 30fps, 800kbps)"
echo "   ‚úÖ Boa qualidade visual"
echo "   ‚ö†Ô∏è  Maior uso de recursos"
echo "   ‚ö†Ô∏è  Pode ter lentid√£o no Orange Pi"
echo ""
echo "4) Alta Qualidade (192x384, 30fps, 1200kbps)"
echo "   ‚úÖ Melhor qualidade visual"
echo "   ‚ùå N√£o recomendado para Orange Pi"
echo "   ‚ö†Ô∏è  Alto uso de CPU/RAM"
echo ""
echo "5) Personalizado"
echo "   Configure manualmente todos os par√¢metros"
echo ""
read -p "Escolha [1-5]: " profile

# Configura√ß√µes base
WIDTH=192
HEIGHT=384
CODEC="libx264"
PROFILE="baseline"
LEVEL="3.0"
PRESET="slow"
PIXEL_FORMAT="yuv420p"

# Aplicar perfil selecionado
case $profile in
    1)
        echo "‚ûú Perfil: Ultra Leve"
        FPS=24
        BITRATE="300k"
        PRESET="ultrafast"
        ;;
    2)
        echo "‚ûú Perfil: Leve (Recomendado)"
        FPS=24
        BITRATE="500k"
        PRESET="fast"
        ;;
    3)
        echo "‚ûú Perfil: Normal"
        FPS=30
        BITRATE="800k"
        PRESET="medium"
        ;;
    4)
        echo "‚ûú Perfil: Alta Qualidade"
        FPS=30
        BITRATE="1200k"
        PRESET="slow"
        ;;
    5)
        echo "‚ûú Perfil: Personalizado"
        read -p "Largura [192]: " custom_width
        WIDTH=${custom_width:-192}
        read -p "Altura [384]: " custom_height
        HEIGHT=${custom_height:-384}
        read -p "FPS [24]: " custom_fps
        FPS=${custom_fps:-24}
        read -p "Bitrate (ex: 500k) [500k]: " custom_bitrate
        BITRATE=${custom_bitrate:-500k}
        read -p "Preset (ultrafast/fast/medium/slow) [fast]: " custom_preset
        PRESET=${custom_preset:-fast}
        ;;
    *)
        echo "‚ùå Op√ß√£o inv√°lida!"
        exit 1
        ;;
esac

echo ""
echo "======================================"
echo "Configura√ß√µes de convers√£o:"
echo "======================================"
echo "Resolu√ß√£o: ${WIDTH}x${HEIGHT}"
echo "FPS: $FPS"
echo "Bitrate: $BITRATE"
echo "Codec: H.264 baseline"
echo "Preset: $PRESET"
echo ""

echo "üé¨ Iniciando convers√£o..."
echo "‚è≥ Isso pode levar alguns minutos..."
echo ""

# Comando ffmpeg com todas as otimiza√ß√µes
ffmpeg -i "$INPUT_VIDEO" \
    -vf "scale=${WIDTH}:${HEIGHT}:force_original_aspect_ratio=decrease,pad=${WIDTH}:${HEIGHT}:(ow-iw)/2:(oh-ih)/2,fps=${FPS}" \
    -c:v $CODEC \
    -profile:v $PROFILE \
    -level:v $LEVEL \
    -preset $PRESET \
    -b:v $BITRATE \
    -maxrate $BITRATE \
    -bufsize $(echo $BITRATE | sed 's/k//')k \
    -g $((FPS * 2)) \
    -pix_fmt $PIXEL_FORMAT \
    -movflags +faststart \
    -an \
    -y "$OUTPUT_VIDEO"

echo ""
echo "‚úÖ Convers√£o conclu√≠da com sucesso!"
echo ""

# Mostrar informa√ß√µes do arquivo gerado
echo "======================================"
echo "Informa√ß√µes do v√≠deo otimizado:"
echo "======================================"
ls -lh "$OUTPUT_VIDEO"
echo ""
ffmpeg -i "$OUTPUT_VIDEO" 2>&1 | grep -E "Stream|Duration" || true

echo ""
echo "======================================"
echo "‚úÖ V√≠deo otimizado salvo em:"
echo "   $OUTPUT_VIDEO"
echo ""
echo "Pr√≥ximos passos:"
echo "1. Copie o v√≠deo para o Orange Pi:"
echo "   scp $OUTPUT_VIDEO pi@<IP>:/home/pi/pdview/videos/"
echo ""
echo "2. Teste o player:"
echo "   http://<IP-DO-ORANGE-PI>:8080/player.html"
echo "======================================"